# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: todolist
---
# PersistentVolumeClaim pour MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: todolist
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Deployment MySQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: todolist
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "todolist_db"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
# Service MySQL
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: todolist
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
---
# Deployment Backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: todolist
spec:
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: wait-for-mysql
          image: busybox
          command:
            - sh
            - -c
            - |
              echo "Waiting for MySQL to be ready..."
              until nc -z mysql 3306; do
                echo "MySQL not ready yet..."
                sleep 2
              done
              echo "MySQL is ready!"
      containers:
        - name: backend
          image: teralti/todolist-backend:latest
          env:
            - name: DB_HOST
              value: "mysql"
            - name: DB_USER
              value: "root"
            - name: DB_PASSWORD
              value: "root"
            - name: DB_NAME
              value: "todolist_db"
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
# Service Backend
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: todolist
spec:
  selector:
    app: backend
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP
---
# Deployment Frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: todolist
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: teralti/todolist-frontend:latest
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
# Service Frontend
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: todolist
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer
