name: CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:

permissions:
  contents: read
  id-token: write

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: projet_devops_backend

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: todolist_db
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - run: chmod +x ./node_modules/.bin/jest
      - run: npm test

  build-and-push-backend:
    runs-on: ubuntu-latest
    needs: test-backend
    if: success()
    defaults:
      run:
        working-directory: projet_devops_backend
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: projet_devops_backend
          file: projet_devops_backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todolist-backend:latest

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: projet_devops_frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - run: npm install
      - run: npm install -g @angular/cli@15
      - run: ng test --watch=false --browsers=ChromeHeadless

  build-and-push-frontend:
    runs-on: ubuntu-latest
    needs: test-frontend
    if: success()
    defaults:
      run:
        working-directory: projet_devops_frontend
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: projet_devops_frontend
          file: projet_devops_frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todolist-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push-backend, build-and-push-frontend]
    if: success()
    steps:
      - uses: actions/checkout@v4

      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.29.6'

      - name: Configure kubeconfig
        run: |
          echo "$KUBE_CONFIG_TF" > kubeconfig.yaml
          echo "KUBECONFIG=$PWD/kubeconfig.yaml" >> $GITHUB_ENV

      - name: Test kubectl connection
        run: kubectl get nodes

      - name: Install NGINX Ingress Controller
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
            --namespace ingress-nginx --create-namespace \
            --set controller.replicaCount=2 \
            --set controller.nodeSelector."kubernetes\.io/os"=linux \
            --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux \
            --wait --timeout 5m

      - name: Deploy Kubernetes manifests
        run: kubectl apply -f k8s/

      - name: Check rollout
        run: |
          kubectl rollout status deployment/mysql -n todolist
          kubectl rollout status deployment/backend -n todolist
          kubectl rollout status deployment/frontend -n todolist
